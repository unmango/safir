// <auto-generated>
//     Generated by the F# GRPC code generator. DO NOT EDIT!
//     source: safir/v1alpha1/files.proto
// </auto-generated>
namespace rec Safir.V1alpha1
#nowarn "40"
module FilesReflection =
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal FilesServiceListRequest_Descriptor() = Descriptor().MessageTypes.[0]
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal FilesServiceListResponse_Descriptor() = Descriptor().MessageTypes.[1]
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal File_Descriptor() = Descriptor().MessageTypes.[2]
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal RenamedFile_Descriptor() = Descriptor().MessageTypes.[3]
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal FileWatcherError_Descriptor() = Descriptor().MessageTypes.[4]
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal Snapshot_Descriptor() = Descriptor().MessageTypes.[5]
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal FileEvent_Descriptor() = Descriptor().MessageTypes.[6]
    let private descriptorBackingField: global.System.Lazy<global.Google.Protobuf.Reflection.FileDescriptor> =
        let descriptorData = global.System.Convert.FromBase64String("\
            ChpzYWZpci92MWFscGhhMS9maWxlcy5wcm90bxIOc2FmaXIudjFhbHBoYTEiGQoXRmlsZXNTZXJ2aWNl\
            TGlzdFJlcXVlc3QiRgoYRmlsZXNTZXJ2aWNlTGlzdFJlc3BvbnNlEioKBWZpbGVzGAEgAygLMhQuc2Fm\
            aXIudjFhbHBoYTEuRmlsZVIFZmlsZXMiNwoERmlsZRIbCglmdWxsX3BhdGgYASABKAlSCGZ1bGxQYXRo\
            EhIKBG5hbWUYAiABKAlSBG5hbWUifQoLUmVuYW1lZEZpbGUSGwoJZnVsbF9wYXRoGAEgASgJUghmdWxs\
            UGF0aBISCgRuYW1lGAIgASgJUgRuYW1lEiIKDW9sZF9mdWxsX3BhdGgYAyABKAlSC29sZEZ1bGxQYXRo\
            EhkKCG9sZF9uYW1lGAQgASgJUgdvbGROYW1lIiwKEEZpbGVXYXRjaGVyRXJyb3ISGAoHbWVzc2FnZRgB\
            IAEoCVIHbWVzc2FnZSJwCghTbmFwc2hvdBIbCglmdWxsX3BhdGgYASABKAlSCGZ1bGxQYXRoEhIKBGhh\
            c2gYAiABKAlSBGhhc2gSMwoHaGlzdG9yeRgDIAMoCzIZLnNhZmlyLnYxYWxwaGExLkZpbGVFdmVudFIH\
            aGlzdG9yeSLwAgoJRmlsZUV2ZW50EjAKB2NoYW5nZWQYASABKAsyFC5zYWZpci52MWFscGhhMS5GaWxl\
            SABSB2NoYW5nZWQSMAoHY3JlYXRlZBgCIAEoCzIULnNhZmlyLnYxYWxwaGExLkZpbGVIAFIHY3JlYXRl\
            ZBIwCgdkZWxldGVkGAMgASgLMhQuc2FmaXIudjFhbHBoYTEuRmlsZUgAUgdkZWxldGVkEjgKBWVycm9y\
            GAQgASgLMiAuc2FmaXIudjFhbHBoYTEuRmlsZVdhdGNoZXJFcnJvckgAUgVlcnJvchI3CgdyZW5hbWVk\
            GAUgASgLMhsuc2FmaXIudjFhbHBoYTEuUmVuYW1lZEZpbGVIAFIHcmVuYW1lZBI2CgpkaXNjb3ZlcmVk\
            GAYgASgLMhQuc2FmaXIudjFhbHBoYTEuRmlsZUgAUgpkaXNjb3ZlcmVkEhkKCG5ld19oYXNoGAcgASgJ\
            UgduZXdIYXNoQgcKBWV2ZW50MmkKDEZpbGVzU2VydmljZRJZCgRMaXN0Eicuc2FmaXIudjFhbHBoYTEu\
            RmlsZXNTZXJ2aWNlTGlzdFJlcXVlc3QaKC5zYWZpci52MWFscGhhMS5GaWxlc1NlcnZpY2VMaXN0UmVz\
            cG9uc2ViBnByb3RvMw==")
        global.System.Lazy<_>(
            (fun () ->
                global.Google.Protobuf.Reflection.FileDescriptor.FromGeneratedCode(
                    descriptorData,
                    [|
                    |],
                    new global.Google.Protobuf.Reflection.GeneratedClrTypeInfo(
                        null,
                        null,
                        [|
                            new global.Google.Protobuf.Reflection.GeneratedClrTypeInfo(typeof<global.Safir.V1alpha1.FilesServiceListRequest>, global.Safir.V1alpha1.FilesServiceListRequest.Parser, null, null, null, null, null)
                            new global.Google.Protobuf.Reflection.GeneratedClrTypeInfo(typeof<global.Safir.V1alpha1.FilesServiceListResponse>, global.Safir.V1alpha1.FilesServiceListResponse.Parser, [| "Files" |], null, null, null, null)
                            new global.Google.Protobuf.Reflection.GeneratedClrTypeInfo(typeof<global.Safir.V1alpha1.File>, global.Safir.V1alpha1.File.Parser, [| "FullPath"; "Name" |], null, null, null, null)
                            new global.Google.Protobuf.Reflection.GeneratedClrTypeInfo(typeof<global.Safir.V1alpha1.RenamedFile>, global.Safir.V1alpha1.RenamedFile.Parser, [| "FullPath"; "Name"; "OldFullPath"; "OldName" |], null, null, null, null)
                            new global.Google.Protobuf.Reflection.GeneratedClrTypeInfo(typeof<global.Safir.V1alpha1.FileWatcherError>, global.Safir.V1alpha1.FileWatcherError.Parser, [| "Message" |], null, null, null, null)
                            new global.Google.Protobuf.Reflection.GeneratedClrTypeInfo(typeof<global.Safir.V1alpha1.Snapshot>, global.Safir.V1alpha1.Snapshot.Parser, [| "FullPath"; "Hash"; "History" |], null, null, null, null)
                            new global.Google.Protobuf.Reflection.GeneratedClrTypeInfo(typeof<global.Safir.V1alpha1.FileEvent>, global.Safir.V1alpha1.FileEvent.Parser, [| "Changed"; "Created"; "Deleted"; "Error"; "Renamed"; "Discovered"; "NewHash" |], [| "Event" |], null, null, null)
                        |]
                    )
                )
            ),
            true
        )
    let Descriptor(): global.Google.Protobuf.Reflection.FileDescriptor = descriptorBackingField.Value
type FilesServiceListRequest = {
    mutable _UnknownFields: global.Google.Protobuf.UnknownFieldSet
} with
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.Clone() : FilesServiceListRequest = {
        FilesServiceListRequest._UnknownFields = global.Google.Protobuf.UnknownFieldSet.Clone(me._UnknownFields)
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalWriteTo(output: byref<global.Google.Protobuf.WriteContext>) =
        if not <| isNull me._UnknownFields then me._UnknownFields.WriteTo(&output)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.CalculateSize() =
        let mutable size = 0
        if not <| isNull me._UnknownFields then size <- size + me._UnknownFields.CalculateSize()
        size
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.MergeFrom(other: FilesServiceListRequest) =
        me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFrom(me._UnknownFields, other._UnknownFields)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalMergeFrom(input: byref<global.Google.Protobuf.ParseContext>) =
        let mutable tag = input.ReadTag()
        while tag <> 0u do
            match tag with
            | _ ->
                me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFieldFrom(me._UnknownFields, &input)
            tag <- input.ReadTag()
    interface global.Google.Protobuf.IBufferMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalMergeFrom(ctx) = me.InternalMergeFrom(&ctx)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalWriteTo(ctx) = me.InternalWriteTo(&ctx)
    interface global.Google.Protobuf.IMessage<FilesServiceListRequest> with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.Clone() = me.Clone()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(other) = me.MergeFrom(other)
    interface global.Google.Protobuf.IMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.CalculateSize() = me.CalculateSize()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(input) = input.ReadRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.WriteTo(output) = output.WriteRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member __.Descriptor = global.Safir.V1alpha1.FilesReflection.FilesServiceListRequest_Descriptor()
module FilesServiceListRequest =
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal DefaultValue = {
        FilesServiceListRequest._UnknownFields = null
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let empty () = {
        FilesServiceListRequest._UnknownFields = null
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let Parser = global.Google.Protobuf.MessageParser<FilesServiceListRequest>(global.System.Func<_>(empty))
type FilesServiceListResponse = {
    mutable _UnknownFields: global.Google.Protobuf.UnknownFieldSet
    Files: global.Google.Protobuf.Collections.RepeatedField<global.Safir.V1alpha1.File>
} with
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.Clone() : FilesServiceListResponse = {
        FilesServiceListResponse._UnknownFields = global.Google.Protobuf.UnknownFieldSet.Clone(me._UnknownFields)
        FilesServiceListResponse.Files = me.Files.Clone()
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalWriteTo(output: byref<global.Google.Protobuf.WriteContext>) =
        me.Files.WriteTo(&output, FilesServiceListResponse.RepeatedFilesCodec)
        if not <| isNull me._UnknownFields then me._UnknownFields.WriteTo(&output)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.CalculateSize() =
        let mutable size = 0
        size <- size + me.Files.CalculateSize(FilesServiceListResponse.RepeatedFilesCodec)
        if not <| isNull me._UnknownFields then size <- size + me._UnknownFields.CalculateSize()
        size
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.MergeFrom(other: FilesServiceListResponse) =
        me.Files.Add(other.Files)
        me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFrom(me._UnknownFields, other._UnknownFields)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalMergeFrom(input: byref<global.Google.Protobuf.ParseContext>) =
        let mutable tag = input.ReadTag()
        while tag <> 0u do
            match tag with
            | 10u ->
                me.Files.AddEntriesFrom(&input, FilesServiceListResponse.RepeatedFilesCodec)
            | _ ->
                me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFieldFrom(me._UnknownFields, &input)
            tag <- input.ReadTag()
    interface global.Google.Protobuf.IBufferMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalMergeFrom(ctx) = me.InternalMergeFrom(&ctx)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalWriteTo(ctx) = me.InternalWriteTo(&ctx)
    interface global.Google.Protobuf.IMessage<FilesServiceListResponse> with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.Clone() = me.Clone()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(other) = me.MergeFrom(other)
    interface global.Google.Protobuf.IMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.CalculateSize() = me.CalculateSize()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(input) = input.ReadRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.WriteTo(output) = output.WriteRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member __.Descriptor = global.Safir.V1alpha1.FilesReflection.FilesServiceListResponse_Descriptor()
module FilesServiceListResponse =
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal DefaultValue = {
        FilesServiceListResponse._UnknownFields = null
        FilesServiceListResponse.Files = global.Google.Protobuf.Collections.RepeatedField<global.Safir.V1alpha1.File>()
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let empty () = {
        FilesServiceListResponse._UnknownFields = null
        FilesServiceListResponse.Files = global.Google.Protobuf.Collections.RepeatedField<global.Safir.V1alpha1.File>()
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let Parser = global.Google.Protobuf.MessageParser<FilesServiceListResponse>(global.System.Func<_>(empty))
    let FilesFieldNumber = 1
    let RepeatedFilesCodec = global.Google.Protobuf.FieldCodec.ForMessage(10u, global.Safir.V1alpha1.File.Parser)
type File = {
    mutable _UnknownFields: global.Google.Protobuf.UnknownFieldSet
    mutable FullPath: string
    mutable Name: string
} with
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.Clone() : File = {
        File._UnknownFields = global.Google.Protobuf.UnknownFieldSet.Clone(me._UnknownFields)
        File.FullPath = me.FullPath
        File.Name = me.Name
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalWriteTo(output: byref<global.Google.Protobuf.WriteContext>) =
        if me.FullPath <> File.DefaultValue.FullPath
        then
            output.WriteRawTag(10uy)
            output.WriteString(me.FullPath)
        if me.Name <> File.DefaultValue.Name
        then
            output.WriteRawTag(18uy)
            output.WriteString(me.Name)
        if not <| isNull me._UnknownFields then me._UnknownFields.WriteTo(&output)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.CalculateSize() =
        let mutable size = 0
        if me.FullPath <> File.DefaultValue.FullPath then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeStringSize(me.FullPath)
        if me.Name <> File.DefaultValue.Name then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeStringSize(me.Name)
        if not <| isNull me._UnknownFields then size <- size + me._UnknownFields.CalculateSize()
        size
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.MergeFrom(other: File) =
        if other.FullPath <> File.DefaultValue.FullPath
        then me.FullPath <- other.FullPath
        if other.Name <> File.DefaultValue.Name
        then me.Name <- other.Name
        me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFrom(me._UnknownFields, other._UnknownFields)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalMergeFrom(input: byref<global.Google.Protobuf.ParseContext>) =
        let mutable tag = input.ReadTag()
        while tag <> 0u do
            match tag with
            | 10u ->
                me.FullPath <- input.ReadString()
            | 18u ->
                me.Name <- input.ReadString()
            | _ ->
                me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFieldFrom(me._UnknownFields, &input)
            tag <- input.ReadTag()
    interface global.Google.Protobuf.IBufferMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalMergeFrom(ctx) = me.InternalMergeFrom(&ctx)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalWriteTo(ctx) = me.InternalWriteTo(&ctx)
    interface global.Google.Protobuf.IMessage<File> with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.Clone() = me.Clone()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(other) = me.MergeFrom(other)
    interface global.Google.Protobuf.IMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.CalculateSize() = me.CalculateSize()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(input) = input.ReadRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.WriteTo(output) = output.WriteRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member __.Descriptor = global.Safir.V1alpha1.FilesReflection.File_Descriptor()
module File =
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal DefaultValue = {
        File._UnknownFields = null
        File.FullPath = ""
        File.Name = ""
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let empty () = {
        File._UnknownFields = null
        File.FullPath = ""
        File.Name = ""
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let Parser = global.Google.Protobuf.MessageParser<File>(global.System.Func<_>(empty))
    let FullPathFieldNumber = 1
    let NameFieldNumber = 2
type RenamedFile = {
    mutable _UnknownFields: global.Google.Protobuf.UnknownFieldSet
    mutable FullPath: string
    mutable Name: string
    mutable OldFullPath: string
    mutable OldName: string
} with
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.Clone() : RenamedFile = {
        RenamedFile._UnknownFields = global.Google.Protobuf.UnknownFieldSet.Clone(me._UnknownFields)
        RenamedFile.FullPath = me.FullPath
        RenamedFile.Name = me.Name
        RenamedFile.OldFullPath = me.OldFullPath
        RenamedFile.OldName = me.OldName
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalWriteTo(output: byref<global.Google.Protobuf.WriteContext>) =
        if me.FullPath <> RenamedFile.DefaultValue.FullPath
        then
            output.WriteRawTag(10uy)
            output.WriteString(me.FullPath)
        if me.Name <> RenamedFile.DefaultValue.Name
        then
            output.WriteRawTag(18uy)
            output.WriteString(me.Name)
        if me.OldFullPath <> RenamedFile.DefaultValue.OldFullPath
        then
            output.WriteRawTag(26uy)
            output.WriteString(me.OldFullPath)
        if me.OldName <> RenamedFile.DefaultValue.OldName
        then
            output.WriteRawTag(34uy)
            output.WriteString(me.OldName)
        if not <| isNull me._UnknownFields then me._UnknownFields.WriteTo(&output)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.CalculateSize() =
        let mutable size = 0
        if me.FullPath <> RenamedFile.DefaultValue.FullPath then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeStringSize(me.FullPath)
        if me.Name <> RenamedFile.DefaultValue.Name then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeStringSize(me.Name)
        if me.OldFullPath <> RenamedFile.DefaultValue.OldFullPath then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeStringSize(me.OldFullPath)
        if me.OldName <> RenamedFile.DefaultValue.OldName then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeStringSize(me.OldName)
        if not <| isNull me._UnknownFields then size <- size + me._UnknownFields.CalculateSize()
        size
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.MergeFrom(other: RenamedFile) =
        if other.FullPath <> RenamedFile.DefaultValue.FullPath
        then me.FullPath <- other.FullPath
        if other.Name <> RenamedFile.DefaultValue.Name
        then me.Name <- other.Name
        if other.OldFullPath <> RenamedFile.DefaultValue.OldFullPath
        then me.OldFullPath <- other.OldFullPath
        if other.OldName <> RenamedFile.DefaultValue.OldName
        then me.OldName <- other.OldName
        me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFrom(me._UnknownFields, other._UnknownFields)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalMergeFrom(input: byref<global.Google.Protobuf.ParseContext>) =
        let mutable tag = input.ReadTag()
        while tag <> 0u do
            match tag with
            | 10u ->
                me.FullPath <- input.ReadString()
            | 18u ->
                me.Name <- input.ReadString()
            | 26u ->
                me.OldFullPath <- input.ReadString()
            | 34u ->
                me.OldName <- input.ReadString()
            | _ ->
                me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFieldFrom(me._UnknownFields, &input)
            tag <- input.ReadTag()
    interface global.Google.Protobuf.IBufferMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalMergeFrom(ctx) = me.InternalMergeFrom(&ctx)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalWriteTo(ctx) = me.InternalWriteTo(&ctx)
    interface global.Google.Protobuf.IMessage<RenamedFile> with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.Clone() = me.Clone()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(other) = me.MergeFrom(other)
    interface global.Google.Protobuf.IMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.CalculateSize() = me.CalculateSize()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(input) = input.ReadRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.WriteTo(output) = output.WriteRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member __.Descriptor = global.Safir.V1alpha1.FilesReflection.RenamedFile_Descriptor()
module RenamedFile =
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal DefaultValue = {
        RenamedFile._UnknownFields = null
        RenamedFile.FullPath = ""
        RenamedFile.Name = ""
        RenamedFile.OldFullPath = ""
        RenamedFile.OldName = ""
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let empty () = {
        RenamedFile._UnknownFields = null
        RenamedFile.FullPath = ""
        RenamedFile.Name = ""
        RenamedFile.OldFullPath = ""
        RenamedFile.OldName = ""
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let Parser = global.Google.Protobuf.MessageParser<RenamedFile>(global.System.Func<_>(empty))
    let FullPathFieldNumber = 1
    let NameFieldNumber = 2
    let OldFullPathFieldNumber = 3
    let OldNameFieldNumber = 4
type FileWatcherError = {
    mutable _UnknownFields: global.Google.Protobuf.UnknownFieldSet
    mutable Message: string
} with
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.Clone() : FileWatcherError = {
        FileWatcherError._UnknownFields = global.Google.Protobuf.UnknownFieldSet.Clone(me._UnknownFields)
        FileWatcherError.Message = me.Message
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalWriteTo(output: byref<global.Google.Protobuf.WriteContext>) =
        if me.Message <> FileWatcherError.DefaultValue.Message
        then
            output.WriteRawTag(10uy)
            output.WriteString(me.Message)
        if not <| isNull me._UnknownFields then me._UnknownFields.WriteTo(&output)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.CalculateSize() =
        let mutable size = 0
        if me.Message <> FileWatcherError.DefaultValue.Message then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeStringSize(me.Message)
        if not <| isNull me._UnknownFields then size <- size + me._UnknownFields.CalculateSize()
        size
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.MergeFrom(other: FileWatcherError) =
        if other.Message <> FileWatcherError.DefaultValue.Message
        then me.Message <- other.Message
        me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFrom(me._UnknownFields, other._UnknownFields)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalMergeFrom(input: byref<global.Google.Protobuf.ParseContext>) =
        let mutable tag = input.ReadTag()
        while tag <> 0u do
            match tag with
            | 10u ->
                me.Message <- input.ReadString()
            | _ ->
                me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFieldFrom(me._UnknownFields, &input)
            tag <- input.ReadTag()
    interface global.Google.Protobuf.IBufferMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalMergeFrom(ctx) = me.InternalMergeFrom(&ctx)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalWriteTo(ctx) = me.InternalWriteTo(&ctx)
    interface global.Google.Protobuf.IMessage<FileWatcherError> with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.Clone() = me.Clone()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(other) = me.MergeFrom(other)
    interface global.Google.Protobuf.IMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.CalculateSize() = me.CalculateSize()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(input) = input.ReadRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.WriteTo(output) = output.WriteRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member __.Descriptor = global.Safir.V1alpha1.FilesReflection.FileWatcherError_Descriptor()
module FileWatcherError =
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal DefaultValue = {
        FileWatcherError._UnknownFields = null
        FileWatcherError.Message = ""
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let empty () = {
        FileWatcherError._UnknownFields = null
        FileWatcherError.Message = ""
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let Parser = global.Google.Protobuf.MessageParser<FileWatcherError>(global.System.Func<_>(empty))
    let MessageFieldNumber = 1
type Snapshot = {
    mutable _UnknownFields: global.Google.Protobuf.UnknownFieldSet
    mutable FullPath: string
    mutable Hash: string
    History: global.Google.Protobuf.Collections.RepeatedField<global.Safir.V1alpha1.FileEvent>
} with
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.Clone() : Snapshot = {
        Snapshot._UnknownFields = global.Google.Protobuf.UnknownFieldSet.Clone(me._UnknownFields)
        Snapshot.FullPath = me.FullPath
        Snapshot.Hash = me.Hash
        Snapshot.History = me.History.Clone()
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalWriteTo(output: byref<global.Google.Protobuf.WriteContext>) =
        if me.FullPath <> Snapshot.DefaultValue.FullPath
        then
            output.WriteRawTag(10uy)
            output.WriteString(me.FullPath)
        if me.Hash <> Snapshot.DefaultValue.Hash
        then
            output.WriteRawTag(18uy)
            output.WriteString(me.Hash)
        me.History.WriteTo(&output, Snapshot.RepeatedHistoryCodec)
        if not <| isNull me._UnknownFields then me._UnknownFields.WriteTo(&output)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.CalculateSize() =
        let mutable size = 0
        if me.FullPath <> Snapshot.DefaultValue.FullPath then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeStringSize(me.FullPath)
        if me.Hash <> Snapshot.DefaultValue.Hash then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeStringSize(me.Hash)
        size <- size + me.History.CalculateSize(Snapshot.RepeatedHistoryCodec)
        if not <| isNull me._UnknownFields then size <- size + me._UnknownFields.CalculateSize()
        size
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.MergeFrom(other: Snapshot) =
        if other.FullPath <> Snapshot.DefaultValue.FullPath
        then me.FullPath <- other.FullPath
        if other.Hash <> Snapshot.DefaultValue.Hash
        then me.Hash <- other.Hash
        me.History.Add(other.History)
        me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFrom(me._UnknownFields, other._UnknownFields)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalMergeFrom(input: byref<global.Google.Protobuf.ParseContext>) =
        let mutable tag = input.ReadTag()
        while tag <> 0u do
            match tag with
            | 10u ->
                me.FullPath <- input.ReadString()
            | 18u ->
                me.Hash <- input.ReadString()
            | 26u ->
                me.History.AddEntriesFrom(&input, Snapshot.RepeatedHistoryCodec)
            | _ ->
                me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFieldFrom(me._UnknownFields, &input)
            tag <- input.ReadTag()
    interface global.Google.Protobuf.IBufferMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalMergeFrom(ctx) = me.InternalMergeFrom(&ctx)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalWriteTo(ctx) = me.InternalWriteTo(&ctx)
    interface global.Google.Protobuf.IMessage<Snapshot> with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.Clone() = me.Clone()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(other) = me.MergeFrom(other)
    interface global.Google.Protobuf.IMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.CalculateSize() = me.CalculateSize()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(input) = input.ReadRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.WriteTo(output) = output.WriteRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member __.Descriptor = global.Safir.V1alpha1.FilesReflection.Snapshot_Descriptor()
module Snapshot =
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal DefaultValue = {
        Snapshot._UnknownFields = null
        Snapshot.FullPath = ""
        Snapshot.Hash = ""
        Snapshot.History = global.Google.Protobuf.Collections.RepeatedField<global.Safir.V1alpha1.FileEvent>()
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let empty () = {
        Snapshot._UnknownFields = null
        Snapshot.FullPath = ""
        Snapshot.Hash = ""
        Snapshot.History = global.Google.Protobuf.Collections.RepeatedField<global.Safir.V1alpha1.FileEvent>()
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let Parser = global.Google.Protobuf.MessageParser<Snapshot>(global.System.Func<_>(empty))
    let FullPathFieldNumber = 1
    let HashFieldNumber = 2
    let HistoryFieldNumber = 3
    let RepeatedHistoryCodec = global.Google.Protobuf.FieldCodec.ForMessage(26u, global.Safir.V1alpha1.FileEvent.Parser)
type FileEvent = {
    mutable _UnknownFields: global.Google.Protobuf.UnknownFieldSet
    mutable NewHash: string
    mutable Event: ValueOption<global.Safir.V1alpha1.FileEvent.Types.Event>
} with
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.Clone() : FileEvent = {
        FileEvent._UnknownFields = global.Google.Protobuf.UnknownFieldSet.Clone(me._UnknownFields)
        FileEvent.NewHash = me.NewHash
        Event = me.Event
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalWriteTo(output: byref<global.Google.Protobuf.WriteContext>) =
        if me.NewHash <> FileEvent.DefaultValue.NewHash
        then
            output.WriteRawTag(58uy)
            output.WriteString(me.NewHash)
        match me.Event with
        | ValueNone -> ()
        | ValueSome (global.Safir.V1alpha1.FileEvent.Types.Event.Changed x) ->
            output.WriteRawTag(10uy)
            output.WriteMessage(x)
        | ValueSome (global.Safir.V1alpha1.FileEvent.Types.Event.Created x) ->
            output.WriteRawTag(18uy)
            output.WriteMessage(x)
        | ValueSome (global.Safir.V1alpha1.FileEvent.Types.Event.Deleted x) ->
            output.WriteRawTag(26uy)
            output.WriteMessage(x)
        | ValueSome (global.Safir.V1alpha1.FileEvent.Types.Event.Error x) ->
            output.WriteRawTag(34uy)
            output.WriteMessage(x)
        | ValueSome (global.Safir.V1alpha1.FileEvent.Types.Event.Renamed x) ->
            output.WriteRawTag(42uy)
            output.WriteMessage(x)
        | ValueSome (global.Safir.V1alpha1.FileEvent.Types.Event.Discovered x) ->
            output.WriteRawTag(50uy)
            output.WriteMessage(x)
        if not <| isNull me._UnknownFields then me._UnknownFields.WriteTo(&output)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.CalculateSize() =
        let mutable size = 0
        if me.NewHash <> FileEvent.DefaultValue.NewHash then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeStringSize(me.NewHash)
        match me.Event with
        | ValueNone -> ()
        | ValueSome (global.Safir.V1alpha1.FileEvent.Types.Event.Changed x) -> size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeMessageSize(x)
        | ValueSome (global.Safir.V1alpha1.FileEvent.Types.Event.Created x) -> size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeMessageSize(x)
        | ValueSome (global.Safir.V1alpha1.FileEvent.Types.Event.Deleted x) -> size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeMessageSize(x)
        | ValueSome (global.Safir.V1alpha1.FileEvent.Types.Event.Error x) -> size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeMessageSize(x)
        | ValueSome (global.Safir.V1alpha1.FileEvent.Types.Event.Renamed x) -> size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeMessageSize(x)
        | ValueSome (global.Safir.V1alpha1.FileEvent.Types.Event.Discovered x) -> size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeMessageSize(x)
        if not <| isNull me._UnknownFields then size <- size + me._UnknownFields.CalculateSize()
        size
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.MergeFrom(other: FileEvent) =
        if other.NewHash <> FileEvent.DefaultValue.NewHash
        then me.NewHash <- other.NewHash
        if other.Event <> ValueNone
        then me.Event <- other.Event
        me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFrom(me._UnknownFields, other._UnknownFields)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalMergeFrom(input: byref<global.Google.Protobuf.ParseContext>) =
        let mutable tag = input.ReadTag()
        while tag <> 0u do
            match tag with
            | 58u ->
                me.NewHash <- input.ReadString()
            | 10u ->
                let value = global.Safir.V1alpha1.File.empty()
                input.ReadMessage(value)
                me.Event <- ValueSome(global.Safir.V1alpha1.FileEvent.Types.Event.Changed(value))
            | 18u ->
                let value = global.Safir.V1alpha1.File.empty()
                input.ReadMessage(value)
                me.Event <- ValueSome(global.Safir.V1alpha1.FileEvent.Types.Event.Created(value))
            | 26u ->
                let value = global.Safir.V1alpha1.File.empty()
                input.ReadMessage(value)
                me.Event <- ValueSome(global.Safir.V1alpha1.FileEvent.Types.Event.Deleted(value))
            | 34u ->
                let value = global.Safir.V1alpha1.FileWatcherError.empty()
                input.ReadMessage(value)
                me.Event <- ValueSome(global.Safir.V1alpha1.FileEvent.Types.Event.Error(value))
            | 42u ->
                let value = global.Safir.V1alpha1.RenamedFile.empty()
                input.ReadMessage(value)
                me.Event <- ValueSome(global.Safir.V1alpha1.FileEvent.Types.Event.Renamed(value))
            | 50u ->
                let value = global.Safir.V1alpha1.File.empty()
                input.ReadMessage(value)
                me.Event <- ValueSome(global.Safir.V1alpha1.FileEvent.Types.Event.Discovered(value))
            | _ ->
                me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFieldFrom(me._UnknownFields, &input)
            tag <- input.ReadTag()
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.EventCase =
        match me.Event with
        | ValueNone -> 0
        | ValueSome(global.Safir.V1alpha1.FileEvent.Types.Event.Changed _) -> 1
        | ValueSome(global.Safir.V1alpha1.FileEvent.Types.Event.Created _) -> 2
        | ValueSome(global.Safir.V1alpha1.FileEvent.Types.Event.Deleted _) -> 3
        | ValueSome(global.Safir.V1alpha1.FileEvent.Types.Event.Error _) -> 4
        | ValueSome(global.Safir.V1alpha1.FileEvent.Types.Event.Renamed _) -> 5
        | ValueSome(global.Safir.V1alpha1.FileEvent.Types.Event.Discovered _) -> 6
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.ClearEvent() = me.Event <- ValueNone
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.Changed
        with get() =
            match me.Event with
            | ValueSome(global.Safir.V1alpha1.FileEvent.Types.Event.Changed x) -> x
            | _ -> Unchecked.defaultof<_>
        and set(x) =
            me.Event <- ValueSome(global.Safir.V1alpha1.FileEvent.Types.Event.Changed x)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.Created
        with get() =
            match me.Event with
            | ValueSome(global.Safir.V1alpha1.FileEvent.Types.Event.Created x) -> x
            | _ -> Unchecked.defaultof<_>
        and set(x) =
            me.Event <- ValueSome(global.Safir.V1alpha1.FileEvent.Types.Event.Created x)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.Deleted
        with get() =
            match me.Event with
            | ValueSome(global.Safir.V1alpha1.FileEvent.Types.Event.Deleted x) -> x
            | _ -> Unchecked.defaultof<_>
        and set(x) =
            me.Event <- ValueSome(global.Safir.V1alpha1.FileEvent.Types.Event.Deleted x)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.Error
        with get() =
            match me.Event with
            | ValueSome(global.Safir.V1alpha1.FileEvent.Types.Event.Error x) -> x
            | _ -> Unchecked.defaultof<_>
        and set(x) =
            me.Event <- ValueSome(global.Safir.V1alpha1.FileEvent.Types.Event.Error x)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.Renamed
        with get() =
            match me.Event with
            | ValueSome(global.Safir.V1alpha1.FileEvent.Types.Event.Renamed x) -> x
            | _ -> Unchecked.defaultof<_>
        and set(x) =
            me.Event <- ValueSome(global.Safir.V1alpha1.FileEvent.Types.Event.Renamed x)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.Discovered
        with get() =
            match me.Event with
            | ValueSome(global.Safir.V1alpha1.FileEvent.Types.Event.Discovered x) -> x
            | _ -> Unchecked.defaultof<_>
        and set(x) =
            me.Event <- ValueSome(global.Safir.V1alpha1.FileEvent.Types.Event.Discovered x)
    interface global.Google.Protobuf.IBufferMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalMergeFrom(ctx) = me.InternalMergeFrom(&ctx)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalWriteTo(ctx) = me.InternalWriteTo(&ctx)
    interface global.Google.Protobuf.IMessage<FileEvent> with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.Clone() = me.Clone()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(other) = me.MergeFrom(other)
    interface global.Google.Protobuf.IMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.CalculateSize() = me.CalculateSize()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(input) = input.ReadRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.WriteTo(output) = output.WriteRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member __.Descriptor = global.Safir.V1alpha1.FilesReflection.FileEvent_Descriptor()
module FileEvent =
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal DefaultValue = {
        FileEvent._UnknownFields = null
        FileEvent.NewHash = ""
        Event = ValueNone
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let empty () = {
        FileEvent._UnknownFields = null
        FileEvent.NewHash = ""
        Event = ValueNone
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let Parser = global.Google.Protobuf.MessageParser<FileEvent>(global.System.Func<_>(empty))
    let ChangedFieldNumber = 1
    let CreatedFieldNumber = 2
    let DeletedFieldNumber = 3
    let ErrorFieldNumber = 4
    let RenamedFieldNumber = 5
    let DiscoveredFieldNumber = 6
    let NewHashFieldNumber = 7
    module Types =
        type Event =
        | Changed of global.Safir.V1alpha1.File
        | Created of global.Safir.V1alpha1.File
        | Deleted of global.Safir.V1alpha1.File
        | Error of global.Safir.V1alpha1.FileWatcherError
        | Renamed of global.Safir.V1alpha1.RenamedFile
        | Discovered of global.Safir.V1alpha1.File
module FilesService =
    let __ServiceName : string = "safir.v1alpha1.FilesService"
    let private __Helper_SerializeMessage<'t when 't :> global.Google.Protobuf.IBufferMessage>(message: 't, ctx: global.Grpc.Core.SerializationContext) =
        ctx.SetPayloadLength(message.CalculateSize())
        global.Google.Protobuf.MessageExtensions.WriteTo(message :> global.Google.Protobuf.IBufferMessage, ctx.GetBufferWriter())
        ctx.Complete()
    let private __Helper_DeserializeMessage<'t when 't :> global.Google.Protobuf.IMessage<'t>>(ctx: global.Grpc.Core.DeserializationContext, parser: global.Google.Protobuf.MessageParser<'t>) : 't =
        parser.ParseFrom(ctx.PayloadAsReadOnlySequence())
    let private __Marshaller_global_Safir_V1alpha1_FilesServiceListRequest: global.Grpc.Core.Marshaller<global.Safir.V1alpha1.FilesServiceListRequest> = global.Grpc.Core.Marshallers.Create(global.System.Action<_,_>(fun msg ctx -> __Helper_SerializeMessage(msg, ctx)), global.System.Func<_,_>(fun ctx -> __Helper_DeserializeMessage(ctx, global.Safir.V1alpha1.FilesServiceListRequest.Parser)))
    let private __Marshaller_global_Safir_V1alpha1_FilesServiceListResponse: global.Grpc.Core.Marshaller<global.Safir.V1alpha1.FilesServiceListResponse> = global.Grpc.Core.Marshallers.Create(global.System.Action<_,_>(fun msg ctx -> __Helper_SerializeMessage(msg, ctx)), global.System.Func<_,_>(fun ctx -> __Helper_DeserializeMessage(ctx, global.Safir.V1alpha1.FilesServiceListResponse.Parser)))
    let private __Method_List = global.Grpc.Core.Method<global.Safir.V1alpha1.FilesServiceListRequest, global.Safir.V1alpha1.FilesServiceListResponse>(global.Grpc.Core.MethodType.Unary, __ServiceName, "List", __Marshaller_global_Safir_V1alpha1_FilesServiceListRequest, __Marshaller_global_Safir_V1alpha1_FilesServiceListResponse)
    let Descriptor : global.Google.Protobuf.Reflection.ServiceDescriptor = global.Safir.V1alpha1.FilesReflection.Descriptor().Services.[0]
    type FilesServiceClient =
        inherit global.Grpc.Core.ClientBase<FilesServiceClient>
        new(channel: global.Grpc.Core.ChannelBase) = { inherit global.Grpc.Core.ClientBase<FilesServiceClient>(channel) }
        new(callInvoker: global.Grpc.Core.CallInvoker) = { inherit global.Grpc.Core.ClientBase<FilesServiceClient>(callInvoker) }
        new(configuration: global.Grpc.Core.ClientBase.ClientBaseConfiguration) = { inherit global.Grpc.Core.ClientBase<FilesServiceClient>(configuration) }
        member me.List(request: global.Safir.V1alpha1.FilesServiceListRequest, ?headers: global.Grpc.Core.Metadata, ?deadline: global.System.DateTime, ?cancellationToken: global.System.Threading.CancellationToken) : global.Safir.V1alpha1.FilesServiceListResponse =
            me.List(request, global.Grpc.Core.CallOptions(defaultArg headers null, Option.toNullable deadline, defaultArg cancellationToken global.System.Threading.CancellationToken.None))
        member me.List(request: global.Safir.V1alpha1.FilesServiceListRequest, callOptions: global.Grpc.Core.CallOptions) : global.Safir.V1alpha1.FilesServiceListResponse =
            me.CallInvoker.BlockingUnaryCall(__Method_List, null, callOptions, request)
        member me.ListAsync(request: global.Safir.V1alpha1.FilesServiceListRequest, ?headers: global.Grpc.Core.Metadata, ?deadline: global.System.DateTime, ?cancellationToken: global.System.Threading.CancellationToken) : global.Grpc.Core.AsyncUnaryCall<global.Safir.V1alpha1.FilesServiceListResponse> =
            me.ListAsync(request, global.Grpc.Core.CallOptions(defaultArg headers null, Option.toNullable deadline, defaultArg cancellationToken global.System.Threading.CancellationToken.None))
        member me.ListAsync(request: global.Safir.V1alpha1.FilesServiceListRequest, callOptions: global.Grpc.Core.CallOptions) : global.Grpc.Core.AsyncUnaryCall<global.Safir.V1alpha1.FilesServiceListResponse> =
            me.CallInvoker.AsyncUnaryCall(__Method_List, null, callOptions, request)
        override __.NewInstance(configuration: global.Grpc.Core.ClientBase.ClientBaseConfiguration) = FilesServiceClient(configuration)
    module FilesServiceClient =
        module Functions =
            let list (client: global.Safir.V1alpha1.FilesService.FilesServiceClient) (request: global.Safir.V1alpha1.FilesServiceListRequest) : global.Safir.V1alpha1.FilesServiceListResponse = client.List(request)
            let listOptions (client: global.Safir.V1alpha1.FilesService.FilesServiceClient) (options: global.Grpc.Core.CallOptions) (request: global.Safir.V1alpha1.FilesServiceListRequest) : global.Safir.V1alpha1.FilesServiceListResponse = client.List(request, options)
            let listHeaders (client: global.Safir.V1alpha1.FilesService.FilesServiceClient) (headers: global.Grpc.Core.Metadata) (request: global.Safir.V1alpha1.FilesServiceListRequest) : global.Safir.V1alpha1.FilesServiceListResponse = client.List(request, headers)
            let listAsync (client: global.Safir.V1alpha1.FilesService.FilesServiceClient) (request: global.Safir.V1alpha1.FilesServiceListRequest) : global.Grpc.Core.AsyncUnaryCall<global.Safir.V1alpha1.FilesServiceListResponse> = client.ListAsync(request)
            let listOptionsAsync (client: global.Safir.V1alpha1.FilesService.FilesServiceClient) (options: global.Grpc.Core.CallOptions) (request: global.Safir.V1alpha1.FilesServiceListRequest) : global.Grpc.Core.AsyncUnaryCall<global.Safir.V1alpha1.FilesServiceListResponse> = client.ListAsync(request, options)
            let listHeadersAsync (client: global.Safir.V1alpha1.FilesService.FilesServiceClient) (headers: global.Grpc.Core.Metadata) (request: global.Safir.V1alpha1.FilesServiceListRequest) : global.Grpc.Core.AsyncUnaryCall<global.Safir.V1alpha1.FilesServiceListResponse> = client.ListAsync(request, headers)
// End of auto-generated code
