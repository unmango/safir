// @generated by protoc-gen-es v1.3.0 with parameter "target=ts"
// @generated from file safir/v1alpha1/files.proto (package safir.v1alpha1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message safir.v1alpha1.FilesServiceDiscoverRequest
 */
export class FilesServiceDiscoverRequest extends Message<FilesServiceDiscoverRequest> {
  /**
   * @generated from field: string full_path = 1;
   */
  fullPath = "";

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: string sha256 = 3;
   */
  sha256 = "";

  constructor(data?: PartialMessage<FilesServiceDiscoverRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "safir.v1alpha1.FilesServiceDiscoverRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "full_path", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "sha256", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FilesServiceDiscoverRequest {
    return new FilesServiceDiscoverRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FilesServiceDiscoverRequest {
    return new FilesServiceDiscoverRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FilesServiceDiscoverRequest {
    return new FilesServiceDiscoverRequest().fromJsonString(jsonString, options);
  }

  static equals(a: FilesServiceDiscoverRequest | PlainMessage<FilesServiceDiscoverRequest> | undefined, b: FilesServiceDiscoverRequest | PlainMessage<FilesServiceDiscoverRequest> | undefined): boolean {
    return proto3.util.equals(FilesServiceDiscoverRequest, a, b);
  }
}

/**
 * @generated from message safir.v1alpha1.FilesServiceDiscoverResponse
 */
export class FilesServiceDiscoverResponse extends Message<FilesServiceDiscoverResponse> {
  /**
   * @generated from field: safir.v1alpha1.File file = 1;
   */
  file?: File;

  constructor(data?: PartialMessage<FilesServiceDiscoverResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "safir.v1alpha1.FilesServiceDiscoverResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "file", kind: "message", T: File },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FilesServiceDiscoverResponse {
    return new FilesServiceDiscoverResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FilesServiceDiscoverResponse {
    return new FilesServiceDiscoverResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FilesServiceDiscoverResponse {
    return new FilesServiceDiscoverResponse().fromJsonString(jsonString, options);
  }

  static equals(a: FilesServiceDiscoverResponse | PlainMessage<FilesServiceDiscoverResponse> | undefined, b: FilesServiceDiscoverResponse | PlainMessage<FilesServiceDiscoverResponse> | undefined): boolean {
    return proto3.util.equals(FilesServiceDiscoverResponse, a, b);
  }
}

/**
 * @generated from message safir.v1alpha1.FilesServiceListRequest
 */
export class FilesServiceListRequest extends Message<FilesServiceListRequest> {
  constructor(data?: PartialMessage<FilesServiceListRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "safir.v1alpha1.FilesServiceListRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FilesServiceListRequest {
    return new FilesServiceListRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FilesServiceListRequest {
    return new FilesServiceListRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FilesServiceListRequest {
    return new FilesServiceListRequest().fromJsonString(jsonString, options);
  }

  static equals(a: FilesServiceListRequest | PlainMessage<FilesServiceListRequest> | undefined, b: FilesServiceListRequest | PlainMessage<FilesServiceListRequest> | undefined): boolean {
    return proto3.util.equals(FilesServiceListRequest, a, b);
  }
}

/**
 * @generated from message safir.v1alpha1.FilesServiceListResponse
 */
export class FilesServiceListResponse extends Message<FilesServiceListResponse> {
  /**
   * @generated from field: repeated safir.v1alpha1.File files = 1;
   */
  files: File[] = [];

  constructor(data?: PartialMessage<FilesServiceListResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "safir.v1alpha1.FilesServiceListResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "files", kind: "message", T: File, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FilesServiceListResponse {
    return new FilesServiceListResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FilesServiceListResponse {
    return new FilesServiceListResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FilesServiceListResponse {
    return new FilesServiceListResponse().fromJsonString(jsonString, options);
  }

  static equals(a: FilesServiceListResponse | PlainMessage<FilesServiceListResponse> | undefined, b: FilesServiceListResponse | PlainMessage<FilesServiceListResponse> | undefined): boolean {
    return proto3.util.equals(FilesServiceListResponse, a, b);
  }
}

/**
 * @generated from message safir.v1alpha1.File
 */
export class File extends Message<File> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string full_path = 2;
   */
  fullPath = "";

  /**
   * @generated from field: string name = 3;
   */
  name = "";

  /**
   * @generated from field: string sha256 = 4;
   */
  sha256 = "";

  constructor(data?: PartialMessage<File>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "safir.v1alpha1.File";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "full_path", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "sha256", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): File {
    return new File().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): File {
    return new File().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): File {
    return new File().fromJsonString(jsonString, options);
  }

  static equals(a: File | PlainMessage<File> | undefined, b: File | PlainMessage<File> | undefined): boolean {
    return proto3.util.equals(File, a, b);
  }
}

